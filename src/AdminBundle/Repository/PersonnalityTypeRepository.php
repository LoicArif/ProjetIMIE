<?php

namespace AdminBundle\Repository;

use AdminBundle\Entity\PersonnalityType;

/**
 * PersonnalityTypeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonnalityTypeRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Renvois tout les personnalityType
     *
     * @return array
     */
    public function getPersonnalityTypes()
    {
        return $this->findAll();
    }

    /**
     * Renvois un personnalityTypes grâce à sont id
     *
     * @param $ptId
     *
     * @return null|object
     */
    public function getPersonnalityTypeById($ptId)
    {
        return $this->findOneBy(["id" => $ptId]);
    }

    /**
     * Renvois un personnalityTypes grâce à sont nom
     *
     * @param $name
     *
     * @return null|object
     */
    public function getPersonnalityTypeByName($name)
    {
        return $this->findOneBy(['name' => $name]);
    }

    public function postPersonnalityType($name, $personnalityType, $opposedPersonnalityType)
    {
        if(!$this->checkIfPersonnalityTypeAlreadyExist($name))
        {
            $em = $this->getEntityManager();
            $jobRepository = $this->getEntityManager()->getRepository("AdminBundle:Job");
            $JobPersonnalityRepository = $this->getEntityManager()->getRepository("AdminBundle:JobPersonnality");

            $jobs = $jobRepository->getJobs();

            if(is_string($name))
            {
                $pT = new PersonnalityType();

                $pT->setName($name)
                    ->setPersonnalityType($personnalityType)
                    ->setOpposedPersonnalityType($opposedPersonnalityType);

                $em->persist($pT);
                $em->flush();


                foreach($jobs as $job)
                {
                    $JobPersonnalityRepository->postJobPersonnality(50, $job, $pT);
                }

                return $pT;
            }
        }

        return false;
    }

    /**
     * Modifie un type de personnalité
     *
     * @param $id
     * @param $name
     * @param $personnalityType
     * @param $opposedPersonnalityType
     *
     * @return bool|null|object
     */
    public function putPersonnalityType($id, $name, $personnalityType, $opposedPersonnalityType)
    {
        $em = $this->getEntityManager();

        $pT = $this->getPersonnalityTypeById($id);

        if(is_null($pT))
        {
            return false;
        }

        $pT->setName($name)
            ->setPersonnalityType($personnalityType)
            ->setOpposedPersonnalityType($opposedPersonnalityType);

        $em->persist($pT);
        $em->flush();

        return $pT;
    }

    /**
     * Supprime un type de personnalité
     *
     * @param $id
     *
     * @return bool
     */
    public function deletePersonnalityType($id)
    {
        $em = $this->getEntityManager();

        $pT = $this->getPersonnalityTypeById($id);

        if(is_null($pT))
        {
            return false;
        }

        $em->remove($pT);
        $em->flush();

        return true;
    }

    /**
     * Renvois true si le type de personnalité existe déjà
     *
     * @param $name
     *
     * @return bool
     */
    public function checkIfPersonnalityTypeAlreadyExist($name)
    {
        $isHereOrNot = $this->getEntityManager()->createQueryBuilder()
            ->select("pT")
            ->from("AdminBundle:PersonnalityType", "pT")
            ->where("pT.name = :name")
            ->setParameter(":name", $name)
            ->getQuery()
            ->getResult();

        if(count($isHereOrNot))
            return true;

        return false;
    }
}
